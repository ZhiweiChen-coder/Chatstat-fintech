<script lang="js" backend on="preMiddleware">
var _ = require('lodash');
var webpack = require('webpack');
var webpackDevMiddleware = require('webpack-dev-middleware');
var webpackHotMiddleware = require('webpack-hot-middleware');

/**
* Installs webpack as a compile-on-demand service
* This bypasses the need to call `gulp build.vue` before each run cycle
*/
if (!global.app) throw new Error('Cant find `app` global - run this middleware within a Doop project only');
if (!Object.prototype.hasOwnProperty.call(global.app.config, 'hmr')) console.warn('[WARN] Missing HMR configuration');

if (app.config.isProduction || !app.config?.hmr?.enabled || !app.config?.hmr?.backend) return app.log.warn.as('HMR', 'Hot module backend disabled');

app.log.as('HMR', 'Hot module backend enabled');
if (!app.config.hmr.frontend) app.log.warn.as('HMR', 'Hot module frontend disabled', app.log.colors.gray('(you will need to manually reload browser to see changes)'));

// Only initialise a compiler if we're going to use it
var webpackConfig = require(`${app.config.paths.root}/node_modules/@doop/core-vue/webpack.config`);
var devCompiler = webpack(_.merge(webpackConfig, {
    stats: {
        colors: true,
    }
}));
var hotCompiler = webpack(webpackConfig);

// Server side middleware - handles recompile on any changes
app.use(webpackDevMiddleware(devCompiler, {
    publicPath: '/dist/',
    writeToDisk: true,
}));

app.use(webpackHotMiddleware(hotCompiler, {
    log: console.log,
    path: '/dist/hmr',
    heartbeat: 10 * 1000,
}));
</script>